<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.NurseMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加老人看护记录 -->
	<insert id="addNurse" parameterType="nurse">
		insert into t_nurse(nurseType,title,content,publishDate) values 
		(#{nurseType},#{title},#{content},#{publishDate})
	</insert>

	<!-- 按照查询条件分页查询老人看护记录 -->
	<select id="queryNurse" resultMap="nurseMap" >
		select t_nurse.* from t_nurse ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="nurseMap" type="nurse">
        <id property="nurseId" column="nurseId" />
    </resultMap>

    <!-- 按照查询条件查询所有老人看护记录 -->
	<select id="queryNurseList" resultMap="nurseMap" >
		select t_nurse.* from t_nurse ${where}
	</select>

    <!-- 按照查询条件的老人看护记录数 -->
	<select id="queryNurseCount" resultType="int">
		select count(*) from t_nurse ${where}
	</select>

	<!-- 根据主键查询某个老人看护记录 -->
	<select id="getNurse" parameterType="int" resultMap="nurseMap">
		select * from t_nurse where t_nurse.nurseId = #{nurseId}
	</select>

	<!-- 更新老人看护记录 -->
	<update id="updateNurse" parameterType="nurse">
		update t_nurse set nurseType=#{nurseType},title=#{title},content=#{content},publishDate=#{publishDate} where nurseId = #{nurseId}
	</update>

	<!-- 删除老人看护记录 -->
	<delete id="deleteNurse" parameterType="int">
		delete from t_nurse where nurseId=#{nurseId}
	</delete>

</mapper>
